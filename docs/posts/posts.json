[
  {
    "path": "posts/bookmark_list/",
    "title": "Bookmarks",
    "description": "JR bookmarks",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-11-18",
    "categories": [],
    "contents": "\nbookmarks\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-11-19T20:17:43-08:00",
    "input_file": {}
  },
  {
    "path": "posts/watch/",
    "title": "Closure and StopWatch",
    "description": "closure",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-10-14",
    "categories": [],
    "contents": "\nWhy Closure, StopWatch example:\nREF: Gillespie, Lovelace pg63\nOne use: closure (function + env) is way to CACHE variables. From R Language:\nhttps://cran.r-project.org/doc/manuals/r-release/R-lang.html 2.1.5 Function Objects:\n\nA function’s environment is the environment that was active at the time that the function was created. Any symbols bound in that environment are captured and available to the function. This combination of the code of the function and the bindings in its environment is called a ‘function closure’,\n\nWhy Closure, StopWatch example:\nREF: Gillespie, Lovelace pg63\nOne use: closure (function + env) is way to CACHE variables.\nWhen I first started hearing words closure, environment or even lambda I startd getting confused. Actually, the basic ideas can be grasped without needed to understand the fancy words.\nAll we need to know is that the variable start_time remains available to self$stop, when ever this function is called, ie start_time is cached.\nNormally, when a function finishes execution like stopwatch below all of its variables disappear. So if self$stop is run much later, it normally would not have access to start_time.\n\n\n# cache start_time\nstopwatch  <- function() {\n    start_time  <- NULL\n    current_time  <- NULL\n\n    self  <- list()\n\n    self$start  <- function() start_time  <<- Sys.time()\n\n    self$current  <- function() difftime(Sys.time(), start_time)\n\n    self$stop  <- function() difftime(Sys.time(), start_time)\n\n    return(self)\n}\n\n\n\n\n\n        watch1  <- stopwatch()\n        watch1$start()\n\n            watch  <- stopwatch()\n            watch$start()\n            watch$current()\n\n\nTime difference of 0.00141 secs\n\n            watch$stop()\n\n\nTime difference of 0.00374 secs\n\n        watch1$stop()\n\n\nTime difference of 0.0588 secs\n\nLooking under the hood, there is a little more complexity that a programmer use efficiently. That is where the fancy words come in.\nI found these couple of stackoverflow answers clarified many of the meanings. Then things became much clearer.\nhttps://stackoverflow.com/a/36879264/5057251\nBelow, the variable start_time is cached for future use by the function self$stop(). Normally, once a\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-15T20:52:29-07:00",
    "input_file": {}
  },
  {
    "path": "posts/people_list/",
    "title": "People I follow",
    "description": "people",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-08-26",
    "categories": [],
    "contents": "\nStackoverflow Users\nhttps://stackoverflow.com/users/3732271/akrun\nhttps://stackoverflow.com/users/134830/richie-cotton\nhttps://stackoverflow.com/users/712603/david-robinson\nStackoverflow Tags\nhttps://stackoverflow.com/questions/tagged/r+regex\nhttps://stackoverflow.com/questions/tagged/r+data.table\nhttps://math.stackexchange.com/questions/tagged/linear-algebra?tab=Votes\nhttps://stats.stackexchange.com/questions/tagged/regression?tab=Votes\nzsh: https://unix.stackexchange.com/questions/tagged/zsh?tab=Votes\nVideo Collections\nNY: https://www.youtube.com/playlist?list=PLlzRFZmxVl9QqpFSfkv6JdYrg29xFwxRt\nBlogs\nDavid Robinson: http://varianceexplained.org/\nRafael Irizarry, Roger Peng, and Jeff Leek https://simplystatistics.org/\nRStudio: https://blog.rstudio.com/\nLearning Machines: entertaining: https://blog.ephorie.de/\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-09-05T20:44:17-07:00",
    "input_file": {}
  },
  {
    "path": "posts/environ/",
    "title": "ls_objects",
    "description": "Objects in environment",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-08-18",
    "categories": [],
    "contents": "\nExploring R base function related to enviroment.\nThis is meant as examples of use, NOT as a tutorial or explanation of R’s environmental structure. Others do this much better:\n-\nls() returns objects in character vector.\n\n\nls()  <- NULL\n\n\n      ## Error in ls() <- NULL: invalid (NULL) left side of assignment\n\nx  <- 2\ny  <- 2*x\nls()\n\n\n      ##  [1] \"choose\"  \"choose2\" \"dt\"      \"f\"       \"file\"    \"jim_lib\"\n      ##  [7] \"names\"   \"paths\"   \"R_env\"   \"s\"       \"x\"       \"x.1\"    \n      ## [13] \"x.2\"     \"x.3\"     \"y\"       \"zsh_env\"\n\nls() includes name of functions.\n\n\nls()\n\n\n      ##  [1] \"choose\"  \"choose2\" \"dt\"      \"f\"       \"file\"    \"jim_lib\"\n      ##  [7] \"names\"   \"paths\"   \"R_env\"   \"s\"       \"x\"       \"x.1\"    \n      ## [13] \"x.2\"     \"x.3\"     \"y\"       \"zsh_env\"\n\nf  <- function() {\n  z  <- 2\n}\n\nls()  # includes f\n\n\n      ##  [1] \"choose\"  \"choose2\" \"dt\"      \"f\"       \"file\"    \"jim_lib\"\n      ##  [7] \"names\"   \"paths\"   \"R_env\"   \"s\"       \"x\"       \"x.1\"    \n      ## [13] \"x.2\"     \"x.3\"     \"y\"       \"zsh_env\"\n\nenvironment is …. environment() returns , one of R’s typeof\n\n\nenvironment()\n\n\n      ## <environment: R_GlobalEnv>\n\ntypeof(environment())\n\n\n      ## [1] \"environment\"\n\nin fact, R has a whole tree of environments search\n\n\nsearch()\n\n\n      ##  [1] \".GlobalEnv\"         \"package:rmarkdown\"  \"package:distill\"   \n      ##  [4] \"package:magrittr\"   \"package:data.table\" \"package:nvimcom\"   \n      ##  [7] \"package:stats\"      \"package:graphics\"   \"package:grDevices\" \n      ## [10] \"package:utils\"      \"package:datasets\"   \"package:xfun\"      \n      ## [13] \"package:sloop\"      \"package:here\"       \"package:lobstr\"    \n      ## [16] \"package:rlang\"      \"package:devtools\"   \"package:usethis\"   \n      ## [19] \"package:reprex\"     \"package:methods\"    \"Autoloads\"         \n      ## [22] \"package:base\"\n\nobjects inside a packagea\n\n\n\n# 1st 9\nls(envir=as.environment(\"package:usethis\"))[1:9]\n\n\n      ## [1] \"browse_circleci\"       \"browse_cran\"          \n      ## [3] \"browse_github\"         \"browse_github_actions\"\n      ## [5] \"browse_github_issues\"  \"browse_github_pat\"    \n      ## [7] \"browse_github_pulls\"   \"browse_github_token\"  \n      ## [9] \"browse_package\"\n\nls(envir=as.environment(“package:usethis”)) And you can add your own, sometimes R creates its won.\nExample, Modify f\n\n\nls()\n\n\n      ##  [1] \"choose\"  \"choose2\" \"dt\"      \"f\"       \"file\"    \"jim_lib\"\n      ##  [7] \"names\"   \"paths\"   \"R_env\"   \"s\"       \"x\"       \"x.1\"    \n      ## [13] \"x.2\"     \"x.3\"     \"y\"       \"zsh_env\"\n\n\nf  <- function() {\n  z  <- 2\n  print(environment())\n  print(ls())\n}\n\nls()  # includes f and g\n\n\n      ##  [1] \"choose\"  \"choose2\" \"dt\"      \"f\"       \"file\"    \"jim_lib\"\n      ##  [7] \"names\"   \"paths\"   \"R_env\"   \"s\"       \"x\"       \"x.1\"    \n      ## [13] \"x.2\"     \"x.3\"     \"y\"       \"zsh_env\"\n\n\n\nf()\n\n\n      ## <environment: 0x555861937710>\n      ## [1] \"z\"\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-09-05T20:44:28-07:00",
    "input_file": {}
  },
  {
    "path": "posts/R_setup_environment/",
    "title": "R_upgrade_notes",
    "description": "Environment variables and R install.",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-08-14",
    "categories": [],
    "contents": "\nR Update Notes\nProblem\nNormally, I use neovim + plugin nvim-R as my IDE. Recently I tried to install RStudio but ran into errors.\nDirectories\nSeems each time I update R, I run into trouble with one or more directories that R uses. The reasons probably relate to the past of switching from RStudio to neovim or compiling from source one time and using binaries the next.\nOver time, my R setup has collected diretories with various permuations of “lib”, “library”, “local.” Rather than sort it all out, I decided to remove R and begin again.\nI found this the Ubuntu/Debian instructions helpful: https://ftp.osuosl.org/pub/cran/bin/linux/debian, which explains some of R environmental variables.\nOrganization\nSo here I collect useful R environment variables I found to be important. To ease navigation, I also set shell environment variables (I use zsh ) to match R.\nOf course, your experience will differ, but getting a good grasp on the R environment variables may avoid some future pain.\n\n\nR_env  <- c(\"R_HOME\", \n            \"R_LIBS_USER\", \n            \"R_LIBS_SITE\",\n            NA,\n            NA) \n\npaths  <- c(\"/usr/lib/R/\",\n            \"/home/jim/R/x86_64-pc-linux-gnu-library/4.1/\",\n            \"/usr/lib/R/library/\",\n            \"/etc/R/Renviron\",\n            \"~/.Renviron\")\n\nzsh_env  <- c(\"R_HOME\", \n            \"R_LIBS_USER\", \n            \"R_LIBS_SITE\",\n            NA,\n            NA)\n\n\n\ndt  <- data.table(R_env = R_env,\n                  path = paths,\n                  zsh_env = zsh_env)\n\n\n\n\n\n\ndt %>% knitr::kable()\n\n\nR_env\npath\nzsh_env\nR_HOME\n/usr/lib/R/\nR_HOME\nR_LIBS_USER\n/home/jim/R/x86_64-pc-linux-gnu-library/4.1/\nR_LIBS_USER\nR_LIBS_SITE\n/usr/lib/R/library/\nR_LIBS_SITE\nNA\n/etc/R/Renviron\nNA\nNA\n~/.Renviron\nNA\n\nSpecial notes\nEnding slash indicates a directory: (/usr/lib/R/library/)\nNo ending slash indicates a file: ( ~/.Renviron )\nThe file Renviron in directory /etc/R/ sets many environment variables, including $R_LIBS_SITE. $R_LIBS_SITE is important because it designates a base one more directories for R packages.\nI pruned $R_LIBS_SITE to include only one directory: /usr/lib/R/library/\nBecause there are a couple of ways to install R packages (from Debian, from source, from inside R, …) I may decide later to modify this.\n(future) There are other environment variables that may be useful, for example R_ENVIRON, R_ENVIRON_USER but I did not use these.\nChecking\nHere is one way to confirm which directories R is using for packages.\n\n\n.libPaths()\n\n\n      ## [1] \"/home/jim/R/x86_64-pc-linux-gnu-library/4.1\"\n      ## [2] \"/usr/lib/R/library\"\n\nAnother way is through Sys.getenv() to find R env variables\nR_HOME\nR_LIBS_SITE\nR_LIBS_USER\n\n\n\ns[grep(pattern = \"^R_LIBS\", x = names)]\n\n\n      ## R_LIBS               \n      ## R_LIBS_SITE          /usr/lib/R/library\n      ## R_LIBS_USER          ~/R/x86_64-pc-linux-gnu-library/4.1\n\nTroubleshooting\nR –vanilla, skips profile and any user set R environment variables.\n\n\nknitr::knit_exit()\n\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-14T23:45:48-07:00",
    "input_file": {}
  },
  {
    "path": "posts/random-R-notes/",
    "title": "R odds and ends ",
    "description": "R odds & ends",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-08-14",
    "categories": [],
    "contents": "\nMisc R\nbase R only, collect here\nunlist\ndput\nsave\nNot so keen on  construct.\n\n\n# ======================\n## if - else if - else\n# ======================\n\nf  <- function(x) {\n  if (x <0) {cat(\"less than 0\")}\n  else if(x<1) {cat(\"less than 1\")}\n  else if(x<2) {cat(\"less than 2\")}\n  else if(x<3) {cat(\"less than 3\")}\n  else if(x<4) {cat(\"less than 4\")}\n  else {cat(\"4 or greater\")}\n}\n\nx <- -1\nf(x)\n\n\n      ## less than 0\n\nf(x <- x+1)\n\n\n      ## less than 1\n\nf(x  <- x+1)\n\n\n      ## less than 2\n\nf(x  <- x+1)\n\n\n      ## less than 3\n\nx\n\n\n      ## [1] 2\n\nBut ifelse(boolean, true , false) is very handy.\n\n\n#  \n# ======================\n##    ifelse\n# ======================\nifelse(5>3, \"yes\", \"no\")\n\n\n      ## [1] \"yes\"\n\nx  <- c(1,5,10)\n\n# return vector of length(x) and each element 'yes' or 'no'\nifelse(x > 5, \"yes\", \"no\")  # 'no' 'no' 'yes'\n\n\n      ## [1] \"no\"  \"no\"  \"yes\"\n\nswitch\n\n\n## as function, x must evaluate to integer or character\nchoose  <- function(x) {\n  stopifnot(is.character(x))\n\n    base::switch(x, \n             A = \"first\", \n             B = \"second\",\n             C = \"third\"\n)\n\n}\n\n## choose one\n    x  <- 3\n    x <- 100\n    x  <- \"B\"\n\n##\n    choose(x)\n\n\n      ## [1] \"second\"\n\nI find this useful, based on parameter  do something with x\n\n\nchoose2  <- function(x=NULL, type=character(1)){\n\n  base::switch(type,\n               video = paste0(\"print videos\",length(x)),\n               playlist = \"print playlists\",\n               channel = \"print channel\")\n\n}\nx  <- NULL\nchoose2(x,\"channel\")\n\n\n      ## [1] \"print channel\"\n\nchoose2(x,\"playlist\")\n\n\n      ## [1] \"print playlists\"\n\nchoose2(x, \"video\")\n\n\n      ## [1] \"print videos0\"\n\n### in named vector, names are attributes \n\n\n\n\n\n# ----------------------\n## create named vector\n# ----------------------\n    x  <- 1:5\n    # [1] 1 2 3 4 5\n\n    names(x)  <- letters[1:5]\n    x\n\n\n      ## a b c d e \n      ## 1 2 3 4 5\n\n    # a b c d e \n    # 1 2 3 4 5 \n\n    attributes(x)\n\n\n      ## $names\n      ## [1] \"a\" \"b\" \"c\" \"d\" \"e\"\n\n# ----------------------------------------\n## now, remove the names: couple of ways\n# ----------------------------------------\n\n  x.1  <- unname(x)\n# [1] 1 2 3 4 5\n\n\n## another way to remove names\n  x.2  <- x\n  names(x.2)  <- NULL\n  x.2\n\n\n      ## [1] 1 2 3 4 5\n\n# [1] 1 2 3 4 5\n\n## also\n  x.3  <- as.numeric(x)\n# [1] 1 2 3 4 5\n\n\n\nexpand relative file name\n\n\nfile <- \"BASE/0296_base_R_misc.Rmd\"\nnormalizePath(file)\n\n\n      ## [1] \"BASE/0296_base_R_misc.Rmd\"\n\npath.expand(file)\n\n\n      ## [1] \"BASE/0296_base_R_misc.Rmd\"\n\npath.expand(\"~\")\n\n\n      ## [1] \"/home/jim\"\n\n\n```{.r .distill-force-highlighting-css}\n\n\n\n",
    "preview": {},
    "last_modified": "2021-09-05T20:43:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/publish_project/",
    "title": "latex_trees",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Jim",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-07-29",
    "categories": [],
    "contents": "\nLatex and Trees\nExample of Latex and Trees\n{r users, child=c(\"~/code/publish_project/MATH/0100_latex_trees.Rmd\")\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-25T14:23:04-07:00",
    "input_file": {}
  },
  {
    "path": "posts/reading_list/",
    "title": "Useful reading",
    "description": "reading",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-07-29",
    "categories": [],
    "contents": "\nSome of the books I find useful:\n\nAs of \nR - always learn something new:\nBurns, R Inferno (not intro book)\nPeng, https://bookdown.org/rdpeng/rprogdatascience/\nHadley, https://r4ds.had.co.nz/index.html\nJennybc (book) wtf git\nGillespie (2016) https://bookdown.org/csgillespie/efficientR/\nMatloff: Art of R Programming (2011)\nR - more advanced\nofficial R CRAN: https://cran.r-project.org/manuals.html\ndesign.tidyverse.org\nBasic Statistics\nMore Intuitive/Explanatory:\n[Rossman, know all the basics? confident?] ( https://askgoodquestions.blog/ )\nPrzemyslaw Biecek and Tomasz Burzykowski | different ideas | Ch1, 2 Explanatory Model Analysis | https://ema.drwhy.ai/\nML Berkeley: https://ml.berkeley.edu/blog/posts/crash-course/part-1/\nGoodfellow et al: https://www.deeplearningbook.org/ ideas\nGuo: Creative site and book: https://seeing-theory.brown.edu/#firstPage\nnavarro (learn statistics with r) review lm() and geometric r^2, Ch15, 16\nnavarro 2019 (learn statistics with r) study output of lm()\nSolid, basic stats intros\nPSU Course begin with 414 | | no R * https://online.stat.psu.edu/stat414/ * https://online.stat.psu.edu/stat462/ * https://online.stat.psu.edu/stat415/\nAMS Basic, good intro CLT (but not t)\nDekking, et al Modern Introduction to Probability & Statistics (2005), no R. * https://cis.temple.edu/~latecki/Courses/CIS2033-Spring13/Modern_intro_probability_statistics_Dekking05.pdf\nFaraday, PRAR: Practical Regression, Anova, linear algebra (mature approach)\nFrey, Bruce “Statistical Hacks”\n[Dalpiaz, David, Univ of IL] ( https://daviddalpiaz.github.io/appliedstats/ )\nLindelov: Concise R examples of common stat tests.\nMatloff (Prob book) * http://heather.cs.ucdavis.edu/~matloff/132/PLN/probstatbook/ProbStatBook.pdf * (via pdflatex) https://github.com/matloff/probstatbook Good, maybe too good and skips a few basics?\nSiegrist CLT, stats, linear alg | aka randomservices.org | ** best book for introducing Math\nNahim, Dueling Idiots, harder but real world stats/prob problems (pins falling on surfaces)\nOther book stats/R books:\nHannay (=rbassett) read, (avoid pkgs ch 11, 12) | https://faculty.nps.edu/rbassett/_book/\nCompeau:\n* great ideas book! http://compeau.cbd.cmu.edu/ |\n* http://compeau.cbd.cmu.edu/programming-for-lovers/ cmu - ch 8, 9 esp collinear.\nBerkeley, excellent glossary: https://www.stat.berkeley.edu/~stark/SticiGui/Text/gloss.htm\nIsmay modern dive (2020)\nKaplan (2017) ch 6.5 https://dtkaplan.github.io/SM2-bookdown/\nKurz: Statistial Rethinking reCoded (Bayesian)\nLane se(b_hat)\nMatloff(2020) book\nMcelreath (videos)\nPENG | art of … (2017) ch 6.5 | r4ds (2019) ch 9.5\nmosaic ch 5.6, ch 24\nMore advanced regession/modeling books\nShalizi: excellent: * (2019) http://www.stat.cmu.edu/~cshalizi/TALR/ -deeper/more explanatory. By Ch 11, use of gradient f, matrix derviatives …. (following FARA?) * Shalizi http://www.stat.cmu.edu/~cshalizi/ADAfaEPoV/ADAfaEPoV.pdf\n* http://www.stat.cmu.edu/~cshalizi/mreg/15/\nBoehmke Hands on ML | https://bradleyboehmke.github.io/HOML/ Ch 4,5\nDavidson (Econometric) - Ch 1, 2\nMATLOFF (1st book) | ch3 - lot of useful prproperties of x,y | ch 7 - affine transformations\nThomas, Math for ML … good lin alg, but quickly gets advanced. https://gwthomas.github.io/docs/math4ml.pdf\nDeisenroth, Faiesel et al | Math4ML *book | linear alg book, regression, 2nd level\nEfron, Hastie “Computer Age Statistical Inference” (advanced, but chapter intros put techniques into perspective), no R.\nKuhn (2019): https://bookdown.org/max/FES/\nRAFAEL dsbook - ch 17.4, ch 18.3.4\nRoback/Legler Beyond Multiple Linear Regression: (2021)_ https://bookdown.org/roback/bookdown-BeyondMLR/ (Replaces BYSH) introduces likelihood; ch6 - logistic worked problem\nSiegrist (aka random services.org) * random| (3)expected value 1..11 and |(5) random samples 1-8 (t-dist)\nTaubes, linear alg, statistics, http://people.math.harvard.edu/~knill/teaching/math19b_2011/handouts/chapters1-19.pdf Biology? math? probability? Think this is really an ideas book; not as easy as may appear.\nLinear Algebra (as mathematics)\nBeezer Linear Algebra (easier?)\nHerve Adbi | lin alg| no R, no stat, starts simple but gets to decomposition.\nStrang, Linear Algebra (classic)\nArtin, Michael “Algebra” - readable ?\nFriendly - R Pkg linear algebra\nKazan | normal equations\nIntro to Linear Alg & Models,\nKuiper, Shonda: simple, clear: video: https://www.youtube.com/watch?v=jQkK0XMrAdM\nRace, Shaina gentle intro to lin alg:, https://shainarace.github.io/LinearAlgebra/index.html\nThomas, Garrett, Math for ML, Berkeley https://gwthomas.github.io/docs/math4ml.pdf\nBendixcarstensen.com, with R & matrix models (practical; try not use api pkg) http://www.bendixcarstensen.com/APC/linalg-notes-BxC.pdf\nRafael genomics - Chapter 4 matrix\nGood Technical Reading\nLatex: Latex in 24 hours (iPad)\nLinux: Archiwiki, Debian, FreeBSD\nGross, Ash et al “Elliptical Tales” - very readable, but must think! (515.983 | ASH | 2012)\nSeefeld, et al Biology & R | https://cran.r-project.org/doc/contrib/Seefeld_StatsRBio.pdf\nVideos\nmaththebeautiful - Paul?\nBright Side of Math\n3Blue1Brown\nZedstatistics\n[Chris Mack] (http://www.lithoguru.com/scientist/statistics/course.html) - practical R, models\nStatistics Globe\nStatquest - Josh Starmer\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-14T06:47:15-07:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to blog5",
    "description": "A few things I found interesting in R.",
    "author": [
      {
        "name": "Jim",
        "url": {}
      }
    ],
    "date": "2021-06-05",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-11-18T15:00:00-08:00",
    "input_file": {}
  }
]
